#! /bin/bash

declare testarr=(
	[1]=sleepTheSystemWithNoKeyWhenItIsRequired
	[2]=sleepTheSystemWithKeyWhenItIsRequired
	[3]=discoverServerUnderTest
	[4]=launchApplicationNotRecognized
	[5]=launchApplicationInRunningStateWithNoPayload
	[6]=launchApplicationInRunningStateWithPayload
	[7]=launchApplicationInStoppedStateWithPayload
	[8]=launchApplicationInStoppedStateWithNoPayload
	[9]=launchApplicationInHiddenStateWithNoPayload
	[10]=launchApplicationInHiddenStateWithPayload
	[11]=launchApplicationWithExcessPayload
	[12]=stopInvalidApplicationInstance
	[13]=stopApplicationInRunningState
	[14]=stopApplicationInStoppedState
	[15]=stopApplicationInHiddenState
	[16]=hideInvalidApplicationInstance
	[17]=hideApplicationInHiddenState
	[18]=hideApplicationInRunningState
	[19]=stateChangesWithoutDIAL
	[20]=launchHideStopStressTest
	[21]=checkStatusofSystemApp
)		

echo ' _________________________________________________'; 
echo '|						 |';
echo '|		Enter Test option:	 	 |';
echo '|						 |';
echo '|	1) Pacemaker				 |';
echo '|	2) Websockets				 |';
echo '|	3) Node.js compliance(depreciated) 	 |';
echo '| 	4) Node.js compliance(oct2019)           |';
echo '| 	5) Roku Node.js compliance	       	 |';
echo '|					  	 |';
echo '|	x) Exit				         |';
echo '|________________________________________________|';

read option

case $option in
	1)
	pacelink=$(ipconfig getifaddr en0);
	echo $pacelink:4433 | pbcopy;
	sleep 1;
	echo Press -Enter- to open mirror. Paste in URL field;
	read enter;
	open "https://qual-e.appspot.com/mirror";
	python ~/bin/"Test Package"/pacemaker.py;
	;;
	2)
	weblink=$(ipconfig getifaddr en0);
	echo qual-e.appspot.com/localtransport/index.html?turl=http://$weblink:5050 | pbcopy;
	sleep 1;	
	echo Press -Enter- to open mirror and paste to URL field;
	read enter;
	open "https://qual-e.appspot.com/mirror";
	node ~/bin/"Test Package"/lt_test_runner/lt_test_runner.js;
	;;
	3)
	echo  '______________________________'
	echo '|                             |' 
	echo '|  a) Run All                 |' 
	echo '|  b) Individual              |' 
	echo  '______________________________'
	read select
	case $select in
		#run all node.js
		a)
		echo Enter Device IP address and Press Enter;
		read host;
		node ~/bin/"Test Package"/dial-reference-master/server/tests/js_tests/tests/tests.js --host $host --app YouTube --loglevel debug;
		;;
		#Individual loop
		b)
		echo Enter Device IP address and Press Enter;
		read host;
		echo Enter Test number from list:
		echo "-----------------------------------"

		count=1;		
		for i in "${testarr[@]}"
		do
			echo "$count: $i" 
			count=$((count+1));
		done;

		echo ""
		echo "Enter q to quit"
		echo "-----------------------------------"

		read input;	

		while [ $input != 'q' ];
		do
			testcase=${testarr[input]};
			node ~/bin/"Test Package"/dial-reference-master/server/tests/js_tests/tests/$testcase.js --host $host --app YouTube --loglevel debug;
			echo Enter Test number from list:
			echo "-----------------------------------"

			count=1;		
			for i in "${testarr[@]}"
			do
				echo "$count: $i" 
				count=$((count+1));
			done;

			echo ""
			echo "Enter q to quit"
			echo "-----------------------------------"
			read input;	
	done;	
	;;
	esac;;
	4)
	echo  '______________________________'
	echo '|                             |' 
	echo '|  a) Run All                 |' 
	echo '|  b) Individual              |' 
	echo  '______________________________'
	read select
	case $select in
		#run all node.js
		a)
		echo Enter Device IP address and Press Enter;
		read host;
		node ~/bin/"Test Package"/dial-reference/server/tests/js_tests/tests/tests.js --host $host --app YouTube --loglevel debug;
		;;
		#Individual loop
		b)
		echo Enter Device IP address and Press Enter;
		read host;
		echo Enter Test number from list:
		echo "-----------------------------------"

		count=1;		
		for i in "${testarr[@]}"
		do
			echo "$count: $i" 
			count=$((count+1));
		done;

		echo ""
		echo "Enter q to quit"
		echo "-----------------------------------"

		read input;	

		while [ $input != 'q' ];
		do
			testcase=${testarr[input]};
			node ~/bin/"Test Package"/dial-reference/server/tests/js_tests/tests/$testcase.js --host $host --app YouTube --loglevel debug;
			echo Enter Test number from list:
			echo "-----------------------------------"

			count=1;		
			for i in "${testarr[@]}"
			do
				echo "$count: $i" 
				count=$((count+1));
			done;

			echo ""
			echo "Enter q to quit"
			echo "-----------------------------------"
			read input;	
	done;	
	;;
	esac;;
	5)
	echo  '______________________________'
	echo '|                             |' 
	echo '|  a) Run All                 |' 
	echo '|  b) Individual              |' 
	echo  '______________________________'
	read select
	case $select in
		a)
		echo Enter Device IP address and Press Enter;
		read host;
		node ~/bin/"Test Package"/dial_reference_roku/server/tests/js_tests/tests/tests.js --host $host --app YouTube --loglevel debug;
		;;
		b)
		echo Enter Device IP address and Press Enter;
		read host;
		echo Enter Test number from list:
		echo "-----------------------------------"
	
		count=1;		
		for i in "${testarr[@]}"
	do
			echo "$count: $i" 
			count=$((count+1));
		done;

		echo ""
		echo "Enter q to quit"
		echo "-----------------------------------"
		
		read input;	

		while [ $input != 'q' ];
		do
			testcase=${testarr[input]};
			node ~/bin/"Test Package"/dial_reference_roku/server/tests/js_tests/tests/$testcase.js --host $host --app YouTube --loglevel debug;
			echo Enter Test number from list:
			echo "-----------------------------------"

			count=1;		
			for i in "${testarr[@]}"
			do
				echo "$count: $i" 
				count=$((count+1));
			done;

			echo ""
			echo "Enter q to quit"
			echo "-----------------------------------"
			read input;	
		done;	
		;;
		esac
		;;
		x|X)
		echo Bye!
		;;
		*)
		echo Enter correct selection!;
		echo \'x\' to Exit;
		read option;
		continue;
		;;
esac;

exit 155;
